#!python
import importlib
from time import perf_counter_ns
from typing import cast

import typer

from euler.solver import Solver

app = typer.Typer(
    help="Project Euler solutions",
    add_completion=False,
)


@app.command()
def solve(
    problem: int = typer.Option(..., help="Problem number"),
    test: bool = typer.Option(False, help="Run against the test case, if available"),
) -> None:
    """
    Run a solution.
    """
    try:
        solution = cast(Solver, importlib.import_module(f"euler.solutions.{problem}"))

        timer_start = perf_counter_ns()
        res = solution.test() if test else solution.run()
        timer_stop = perf_counter_ns()
        delta = timer_stop - timer_start

        result = typer.style(
            res,
            fg=typer.colors.GREEN,
            bold=True,
        )
        typer.echo(f"Solution: {result}")

        run_time = typer.style(
            f"{delta / 1000 ** 2} ms",
            fg=typer.colors.BRIGHT_CYAN,
            bold=True,
        )
        typer.echo(f"Run time: {run_time}")

    except ModuleNotFoundError:
        print(f"No solution for problem #{problem}!")


if __name__ == "__main__":
    app()
